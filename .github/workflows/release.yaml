name: Release

on:
  release:
    types: [published] # 当一个 release 被发布时触发

jobs:
  package:
    name: Package Theme
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "10"
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm package
      - name: Upload Artifacts # 此步骤用于将dist目录内容保存为工作流产物，供后续步骤使用
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist

  upload_release_asset: # 新增的 job
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: package # 确保在 package job 完成后才运行
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist # 下载到 dist 目录

      - name: Compress for Release # 可选：打包成zip或tar.gz，更方便下载
        run: |
          cd dist
          zip -r theme-package-${{ github.event.release.tag_name }}.zip ./*
          # 或者使用 tar.gz
          # tar -czvf theme-package-${{ github.event.release.tag_name }}.tar.gz ./*
        # 确保压缩后的文件名为 theme-package-vX.Y.Z.zip 或 .tar.gz
        id: compress_step # 给这个步骤一个ID，以便引用输出

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1 # 使用 softprops/action-gh-release@v1 来上传资产
        with:
          files: dist/theme-package-${{ github.event.release.tag_name }}.zip # 指定要上传的文件路径
          # 或者如果你使用了 tar.gz:
          # files: dist/theme-package-${{ github.event.release.tag_name }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub 提供的默认 token
